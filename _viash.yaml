viash_version: 0.9.4
name: task_grn_inference
organization: openproblems-bio
version: build_main
license: MIT
keywords: [gene regulatory network, network inference]
links:
  issue_tracker: https://github.com/openproblems-bio/task_grn_inference/issues
  repository: https://github.com/openproblems-bio/task_grn_inference
  docker_registry: ghcr.io
label: GRN Inference
summary: "Article: [geneRNIB: a living benchmark for gene regulatory network inference](https://www.biorxiv.org/content/10.1101/2025.02.25.640181v1)\n\nDocumentation: \n[geneRNBI-doc](https://genernib-documentation.readthedocs.io/en/latest/)\n\nIf you use this framework, please cite\n\n```\n  @article{nourisa2025genernib,\n    title={geneRNIB: a living benchmark for gene regulatory network inference},\n    author={Nourisa, Jalil and Passemiers, Antoine and Stock, Marco and Zeller-Plumhoff, Berit and Cannoodt, Robrecht and Arnold, Christian and Tong, Alexander and Hartford, Jason and Scialdone, Antonio and Moreau, Yves and others},\n    journal={bioRxiv},\n    pages={2025--02},\n    year={2025},\n    publisher={Cold Spring Harbor Laboratory}\n  }\n```\n"
description: |2

  geneRNIB is a living benchmark platform for GRN inference. This platform
  provides curated datasets for GRN inference and evaluation, standardized
  evaluation protocols and metrics, computational infrastructure, and a
  dynamically updated leaderboard to track state-of-the-art methods. It
  runs novel GRNs in the cloud, offers competition scores, and stores them
  for future comparisons, reflecting new developments over time.

  The platform supports the integration of new inference methods, datasets
  and protocols. When a new feature is added, previously evaluated GRNs
  are re-assessed, and the leaderboard is updated accordingly. The aim is
  to evaluate both the accuracy and completeness of inferred GRNs. It is
  designed for both single-modality and multi-omics GRN inference.
info:
  image: thumbnail.svg
  test_resources:
    - type: s3
      path: s3://openproblems-data/resources_test/grn
      dest: resources_test
  readme: "## Installation\nInstall Docker, Java, and Viash using\n[these instructions](https://openproblems.bio/documentation/fundamentals/requirements).\n\n## Download resources\n```bash\ngit clone --recursive git@github.com:openproblems-bio/task_grn_inference.git\n\ncd task_grn_inference\n```\nTo interact with the framework,download the resources containing necessary inferene and evaluation datasets. \n\n```bash\npip install awscli\naws s3 sync  s3://openproblems-data/resources/grn/grn_benchmark resources/grn_benchmark  --no-sign-request\n\n```\n\n\n## Run a GRN inference method \n\nTo infer a GRN for a given dataset (e.g. `op`) using simple Pearson correlation:\n\n```bash\nviash run src/methods/pearson_corr/config.vsh.yaml -- \\\n            --rna resources/grn_benchmark/inference_data/op_rna.h5ad \\\n            --tf_all resources/grn_benchmark/prior/tf_all.csv \\ \n            --prediction output/net.h5ad\n```\n\n## Evaluate a GRN model\n\n```bash\nbash scripts/run_grn_evaluation.sh \\\n            --prediction=output/net.h5ad \\\n            --dataset=op \\ \n            --build_images=true \\ \n            --save_dir=output \n```\n`build_images` only needed for the first run.\n\nThis outputs the scores into `output/score_uns.yaml`. \n\n\n## Add a GRN inference method, evaluation metric, or dataset\n\nTo add a new component to the repository, follow the [Documentation](https://genernib-documentation.readthedocs.io/en/latest/).\n\n## Run the entire pipline\n\nRun `scripts/run_all.sh` for the entire pipeline. Due to resource intensive nature of the task, we have splitted the pipeline into two steps of GRN inference and evaluation.\n"
authors:
  - name: Jalil Nourisa
    roles: [author]
    info:
      github: janursa
      orcid: 0000-0002-7539-4396
  - name: Robrecht Cannoodt
    roles: [author]
    info:
      github: rcannood
      orcid: "0000-0003-3641-729X"
  - name: Jérémie Kalfon
    roles: [contributor]
    info:
      github: jkobject
  - name: Antoine Passimier
    roles: [contributor]
    info:
      github: AntoinePassemiers
  - name: Marco Stock
    roles: [contributor]
    info:
      github: stkmrc
  - name: Christian Arnold
    roles: [contributor]
    info:
      github: chrarnold
config_mods: |
  .runners[.type == "nextflow"].config.labels := { lowmem : "memory = 20.Gb", midmem : "memory = 50.Gb", highmem : "memory = 100.Gb",  veryhighmem : "memory = 200.Gb", veryveryhighmem : "memory = 300.Gb", lowcpu : "cpus = 5", midcpu : "cpus = 15", highcpu : "cpus = 30", lowtime : "time = 1.h", midtime : "time = 4.h", hightime : "time = 8.h", veryhightime : "time = 24.h", twodaytime : "time = 28.h" }
repositories:
  - name: openproblems
    type: github
    repo: openproblems-bio/openproblems
    tag: build/main
