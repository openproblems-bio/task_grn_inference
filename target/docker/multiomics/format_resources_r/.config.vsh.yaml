name: "format_resources_r"
namespace: "multiomics"
version: "build_main"
argument_groups:
- name: "Arguments"
  arguments:
  - type: "file"
    name: "--rna_matrix"
    info: null
    example:
    - "output/scRNA/X_matrix.mtx"
    must_exist: true
    create_parent: true
    required: true
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "file"
    name: "--atac_matrix"
    info: null
    example:
    - "output/scATAC/X_matrix.mtx"
    must_exist: true
    create_parent: true
    required: true
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "file"
    name: "--rna_gene_annot"
    info: null
    example:
    - "output/scRNA/annotation_gene.csv"
    must_exist: true
    create_parent: true
    required: true
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "file"
    name: "--rna_cell_annot"
    info: null
    example:
    - "output/scRNA/annotation_cell.csv"
    must_exist: true
    create_parent: true
    required: true
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "file"
    name: "--atac_peak_annot"
    info: null
    example:
    - "output/scATAC/annotation_gene.csv"
    must_exist: true
    create_parent: true
    required: true
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "file"
    name: "--atac_cell_annot"
    info: null
    example:
    - "output/scATAC/annotation_cell.csv"
    must_exist: true
    create_parent: true
    required: true
    direction: "input"
    multiple: false
    multiple_sep: ";"
  - type: "file"
    name: "--rna_rds"
    info: null
    example:
    - "resources/grn-benchmark/multiomics_r/rna.rds"
    must_exist: true
    create_parent: true
    required: false
    direction: "output"
    multiple: false
    multiple_sep: ";"
  - type: "file"
    name: "--atac_rds"
    info: null
    example:
    - "resources/grn-benchmark/multiomics_r/atac.rds"
    must_exist: true
    create_parent: true
    required: false
    direction: "output"
    multiple: false
    multiple_sep: ";"
resources:
- type: "r_script"
  path: "script.R"
  is_executable: true
info:
  label: "format_resources_r"
  summary: "Converts data to format needed for R methods."
status: "enabled"
scope:
  image: "public"
  target: "public"
repositories:
- type: "github"
  name: "openproblems"
  repo: "openproblems-bio/openproblems"
  tag: "build/main"
license: "MIT"
links:
  repository: "https://github.com/openproblems-bio/task_grn_inference"
  docker_registry: "ghcr.io"
runners:
- type: "executable"
  id: "docker"
  docker_setup_strategy: "ifneedbepullelsecachedbuild"
- type: "executable"
  id: "native"
  docker_setup_strategy: "ifneedbepullelsecachedbuild"
- type: "nextflow"
  id: "nextflow"
  directives:
    label:
    - "midtime"
    - "midmem"
    - "midcpu"
    tag: "$id"
  auto:
    simplifyInput: true
    simplifyOutput: false
    transcript: false
    publish: false
  config:
    labels:
      lowmem: "memory = 20.Gb"
      midmem: "memory = 50.Gb"
      highmem: "memory = 100.Gb"
      lowcpu: "cpus = 5"
      midcpu: "cpus = 15"
      highcpu: "cpus = 30"
      lowtime: "time = 1.h"
      midtime: "time = 4.h"
      hightime: "time = 8.h"
      veryhightime: "time = 24.h"
  debug: false
  container: "docker"
engines:
- type: "docker"
  id: "docker"
  image: "janursa/figr:19-08-2024"
  namespace_separator: "/"
  entrypoint: null
  cmd: null
- type: "native"
  id: "native"
build_info:
  config: "src/process_data/op_multiomics/format_resources_r/config.vsh.yaml"
  runner: "docker"
  engine: "docker|native"
  output: "target/docker/multiomics/format_resources_r"
  executable: "target/docker/multiomics/format_resources_r/format_resources_r"
  viash_version: "0.9.1"
  git_commit: "16590d3197a12ac514e3cf1fa32eab2473f75279"
  git_remote: "https://github.com/openproblems-bio/task_grn_inference"
package_config:
  name: "task_grn_inference"
  version: "build_main"
  label: "GRN Inference"
  summary: "Benchmarking GRN inference methods\n"
  description: "\ngeneRNIB is a living benchmark platform for GRN inference. This\
    \ platform provides curated datasets for GRN inference and evaluation, standardized\
    \ evaluation protocols and metrics, computational infrastructure, and a dynamically\
    \ updated leaderboard to track state-of-the-art methods. It runs novel GRNs in\
    \ the cloud, offers competition scores, and stores them for future comparisons,\
    \ reflecting new developments over time.\n\nThe platform supports the integration\
    \ of new inference methods, datasets and protocols. When a new feature is added,\
    \ previously evaluated GRNs are re-assessed, and the leaderboard is updated accordingly.\
    \ The aim is to evaluate both the accuracy and completeness of inferred GRNs.\
    \ It is designed for both single-modality and multi-omics GRN inference. \n\n\
    In the current version, geneRNIB contains 11 inference methods including both\
    \ single and multi-omics, 8 evalation metrics, and five datasets (OPSCA, Nakatake,\
    \ Norman, Adamson, and Replogle). \n\nSee our publication for the details of methods.\
    \ \n"
  info:
    image: "thumbnail.svg"
    test_resources:
    - type: "s3"
      path: "s3://openproblems-data/resources_test/grn/inference_datasets/"
      dest: "resources_test/grn_benchmark/inference_datasets//"
    - type: "s3"
      path: "s3://openproblems-data/resources_test/grn/evaluation_datasets/"
      dest: "resources_test/grn_benchmark/evaluation_datasets//"
    - type: "s3"
      path: "s3://openproblems-data/resources_test/grn/prior/"
      dest: "resources_test/grn_benchmark/prior/"
    - type: "s3"
      path: "s3://openproblems-data/resources_test/grn/grn_models/"
      dest: "resources_test/grn_models/"
    readme: "## Installation\n\nYou need to have Docker, Java, and Viash installed.\
      \ Follow\n[these instructions](https://openproblems.bio/documentation/fundamentals/requirements)\n\
      to install the required dependencies. \n\n## Download resources\n```bash\ngit\
      \ clone git@github.com:openproblems-bio/task_grn_inference.git\n\ncd task_grn_inference\n\
      ```\n\n# download resources \nTo interact with the framework, you should download\
      \ the resources containing necessary inferene and evaluation datasets to get\
      \ started.\n\n```bash\nscripts/download_resources.sh\n```\n\n## Infer a GRN\
      \ \n\nTo infer a GRN for a given dataset (e.g. `norman`) using simple Pearson\
      \ correlation:\n\n```bash\nviash run src/control_methods/pearson_corr/config.vsh.yaml\
      \ -- \\\n          --rna resources/grn_benchmark/inference_datasets/norman_rna.h5ad\
      \ --prediction output/net.h5ad\n```\n\n## Evaluate a GRN\nOnce got the prediction\
      \ for a given dataset, use the following code to obtain evaluation scores. \n\
      \n```bash\nscripts/single_grn_evaluation.sh output/net.h5ad norman\n```\n\n\
      This will calculate and print the scores as well as output the scores into `output/score.h5ad`\n\
      \n## Add a method\n\nTo add a method to the repository, follow the instructions\
      \ in the `scripts/add_a_method.sh` script.\n"
  repositories:
  - type: "github"
    name: "openproblems"
    repo: "openproblems-bio/openproblems"
    tag: "build/main"
  viash_version: "0.9.1"
  source: "src"
  target: "target"
  config_mods:
  - ".runners[.type == \"nextflow\"].config.labels := { lowmem : \"memory = 20.Gb\"\
    , midmem : \"memory = 50.Gb\", highmem : \"memory = 100.Gb\", lowcpu : \"cpus\
    \ = 5\", midcpu : \"cpus = 15\", highcpu : \"cpus = 30\", lowtime : \"time = 1.h\"\
    , midtime : \"time = 4.h\", hightime : \"time = 8.h\", veryhightime : \"time =\
    \ 24.h\" }\n"
  authors:
  - name: "Jalil Nourisa"
    roles:
    - "author"
    info:
      github: "janursa"
      orcid: "0000-0002-7539-4396"
  - name: "Robrecht Cannoodt"
    roles:
    - "author"
    info:
      github: "rcannood"
      orcid: "0000-0003-3641-729X"
  - name: "Antoine Passimier"
    roles:
    - "contributor"
    info:
      github: "AntoinePassemiers"
  - name: "Marco Stock"
    roles:
    - "contributor"
    info:
      github: "stkmrc"
  - name: "Christian Arnold"
    roles:
    - "contributor"
    info:
      github: "chrarnold"
  keywords:
  - "gene regulatory network"
  - "network inference"
  license: "MIT"
  organization: "openproblems-bio"
  links:
    repository: "https://github.com/openproblems-bio/task_grn_inference"
    docker_registry: "ghcr.io"
    issue_tracker: "https://github.com/openproblems-bio/task_grn_inference/issues"
